{"metadata":{"title":"prefix(while:)","extendedModule":"Parsing","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Character","preciseIdentifier":"s:SJ","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","roleHeading":"Type Method","role":"symbol","externalID":"s:7Parsing6ParserVAASsRszlE6prefix5whileACySsGSbSJc_tFZ","modules":[{"name":"Parsing"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]}},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Parser"},{"text":" that prefixes until predicate fails.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":" ","kind":"text"},{"text":"p","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/prefix(while:)"]}],"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","kind":"symbol","abstract":[],"title":"Parsing"},"doc://Parsing/documentation/Parsing/Parser/prefix(while:)":{"url":"\/documentation\/parsing\/parser\/prefix(while:)","abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes until predicate fails."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)","title":"prefix(while:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","title":"Parser","role":"symbol"}}}