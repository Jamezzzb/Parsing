{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)"],"generated":true},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"],"title":"Type Aliases","generated":true}],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"variants":[{"paths":["\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","modules":[{"name":"Parsing"}]},"sections":[],"references":{"doc://Parsing/documentation/Parsing/Parser":{"title":"Parser","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"code":"String","type":"codeVoice"},{"text":") -> ","type":"text"},{"code":"Output","type":"codeVoice"}],"role":"symbol","url":"\/documentation\/parsing\/parser","type":"topic"},"doc://Parsing/documentation/Parsing":{"kind":"symbol","abstract":[],"url":"\/documentation\/parsing","title":"Parsing","type":"topic","role":"collection","identifier":"doc:\/\/Parsing\/documentation\/Parsing"},"doc://Parsing/documentation/Parsing/Parser/init(stringLiteral:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"stringLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(stringLiteral:)","type":"topic","url":"\/documentation\/parsing\/parser\/init(stringliteral:)"},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"role":"symbol","abstract":[],"url":"\/documentation\/parsing\/parser\/stringliteraltype","title":"Parser.StringLiteralType","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringLiteralType"}],"kind":"symbol","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}