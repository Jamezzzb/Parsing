{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)"],"title":"Initializers"},{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"]}],"kind":"article","metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ExpressibleByStringLiteral Implementations"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations"},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"references":{"doc://Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","title":"Parser","role":"symbol"},"doc://Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","kind":"symbol","abstract":[],"title":"Parsing"},"doc://Parsing/documentation/Parsing/Parser/init(stringLiteral:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parser\/init(stringliteral:)","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(stringLiteral:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringLiteral"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"kind":"symbol","role":"symbol","title":"Parser.StringLiteralType","url":"\/documentation\/parsing\/parser\/stringliteraltype","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"StringLiteralType","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}]},"abstract":[],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"}}}