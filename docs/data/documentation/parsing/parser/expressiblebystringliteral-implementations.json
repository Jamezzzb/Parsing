{"metadata":{"title":"ExpressibleByStringLiteral Implementations","role":"collectionGroup","modules":[{"name":"Parsing"}]},"kind":"article","hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations"},"topicSections":[{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"],"title":"Type Aliases","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations"]}],"references":{"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}]},"role":"symbol","title":"Parser.StringLiteralType","abstract":[],"url":"\/documentation\/parsing\/parser\/stringliteraltype","kind":"symbol","type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"},"doc://Parsing/documentation/Parsing":{"type":"topic","abstract":[],"role":"collection","title":"Parsing","identifier":"doc:\/\/Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing"},"doc://Parsing/documentation/Parsing/Parser/init(stringLiteral:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(stringLiteral:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"stringLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"init(stringLiteral:)","url":"\/documentation\/parsing\/parser\/init(stringliteral:)"},"doc://Parsing/documentation/Parsing/Parser":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"A generic type for building parsers of (","type":"text"},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","url":"\/documentation\/parsing\/parser","kind":"symbol"}}}