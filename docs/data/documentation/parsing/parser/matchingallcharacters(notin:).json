{"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"matchingAllCharacters","kind":"identifier"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ","text":"Character"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","title":"matchingAllCharacters(notIn:)","symbolKind":"method","modules":[{"name":"Parsing"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:7Parsing6ParserVAASsRszlE21matchingAllCharacters5notInACySsGShySJG_tFZ","roleHeading":"Type Method","extendedModule":"Parsing"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchingAllCharacters","kind":"identifier"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"set","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}]}]}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" that prefixes while encountered characters not contained in given set.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/matchingallcharacters(notin:)"]}],"references":{"doc://Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Parsing\/documentation\/Parsing","title":"Parsing","abstract":[]},"doc://Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"matchingAllCharacters","kind":"identifier"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Character","preciseIdentifier":"s:SJ","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"text":" that prefixes while encountered characters not contained in given set.","type":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"matchingAllCharacters(notIn:)"}}}