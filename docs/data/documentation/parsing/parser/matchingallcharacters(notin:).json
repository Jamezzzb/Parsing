{"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"notIn"},{"text":": ","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"roleHeading":"Type Method","externalID":"s:7Parsing6ParserVAASsRszlE21matchingAllCharacters5notInACySsGShySJG_tFZ","extendedModule":"Parsing","role":"symbol","symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"title":"matchingAllCharacters(notIn:)"},"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" that prefixes while encountered characters not contained in given set.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchingAllCharacters","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"notIn"},{"kind":"text","text":" "},{"kind":"internalParam","text":"set"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ","text":"Character"},{"text":">) -> ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/matchingallcharacters(notin:)"]}],"references":{"doc://Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","title":"Parser","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser"},"doc://Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","title":"Parsing","identifier":"doc:\/\/Parsing\/documentation\/Parsing","abstract":[],"kind":"symbol","role":"collection"},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"A ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes while encountered characters not contained in given set."}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"matchingAllCharacters(notIn:)"}}}