{"abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes while encountered characters not contained in given set."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/matchingallcharacters(notin:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)"},"sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"Parsing"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"kind":"text","text":"("},{"text":"notIn","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ","text":"Character"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing","roleHeading":"Type Method","role":"symbol","externalID":"s:7Parsing6ParserVAASsRszlE21matchingAllCharacters5notInACySsGShySJG_tFZ","title":"matchingAllCharacters(notIn:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"notIn"},{"text":" ","kind":"text"},{"text":"set","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ","text":"Character"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://Parsing/documentation/Parsing":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","type":"topic","kind":"symbol","role":"collection","abstract":[]},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:SJ","kind":"typeIdentifier","text":"Character"},{"text":">) -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes while encountered characters not contained in given set."}],"url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","title":"matchingAllCharacters(notIn:)","kind":"symbol"}}}