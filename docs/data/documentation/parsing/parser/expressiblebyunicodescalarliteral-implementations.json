{"metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ExpressibleByUnicodeScalarLiteral Implementations"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(unicodeScalarLiteral:)"],"generated":true,"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType"],"title":"Type Aliases"}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations"]}],"references":{"doc://Parsing/documentation/Parsing/Parser/UnicodeScalarLiteralType":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarLiteralType"}],"title":"Parser.UnicodeScalarLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"UnicodeScalarLiteralType","kind":"identifier"}],"url":"\/documentation\/parsing\/parser\/unicodescalarliteraltype","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType","role":"symbol","type":"topic"},"doc://Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol"},"doc://Parsing/documentation/Parsing":{"kind":"symbol","abstract":[],"url":"\/documentation\/parsing","title":"Parsing","type":"topic","role":"collection","identifier":"doc:\/\/Parsing\/documentation\/Parsing"},"doc://Parsing/documentation/Parsing/Parser/init(unicodeScalarLiteral:)":{"kind":"symbol","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ExtendedGraphemeClusterLiteralType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.UnicodeScalarLiteralType"},{"type":"text","text":"."}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"unicodeScalarLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ExtendedGraphemeClusterLiteralType"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(unicodeScalarLiteral:)"}}}