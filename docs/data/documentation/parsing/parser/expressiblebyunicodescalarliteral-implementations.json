{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"kind":"article","metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations"},"variants":[{"paths":["\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(unicodeScalarLiteral:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType"],"generated":true}],"references":{"doc://Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","title":"Parser","role":"symbol"},"doc://Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","kind":"symbol","abstract":[],"title":"Parsing"},"doc://Parsing/documentation/Parsing/Parser/init(unicodeScalarLiteral:)":{"abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ExtendedGraphemeClusterLiteralType","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.UnicodeScalarLiteralType"},{"text":".","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"unicodeScalarLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ExtendedGraphemeClusterLiteralType"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(unicodeScalarLiteral:)","role":"symbol","type":"topic","kind":"symbol","title":"init(unicodeScalarLiteral:)","url":"\/documentation\/parsing\/parser\/init(unicodescalarliteral:)"},"doc://Parsing/documentation/Parsing/Parser/UnicodeScalarLiteralType":{"abstract":[],"role":"symbol","title":"Parser.UnicodeScalarLiteralType","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnicodeScalarLiteralType","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser\/unicodescalarliteraltype","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType","navigatorTitle":[{"text":"UnicodeScalarLiteralType","kind":"identifier"}]}}}