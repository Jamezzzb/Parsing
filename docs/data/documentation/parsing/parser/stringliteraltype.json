{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"ExpressibleByStringLiteral.StringLiteralType","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/stringliteraltype"]}],"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:7Parsing6ParserVAAytRszlE17StringLiteralTypea","title":"Parser.StringLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"StringLiteralType"}],"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","role":"symbol","roleHeading":"Type Alias","symbolKind":"typealias"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]}]}],"sections":[],"references":{"doc://Parsing/documentation/Parsing/Parser/ExpressibleByStringLiteral-Implementations":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","abstract":[],"title":"ExpressibleByStringLiteral Implementations","type":"topic","url":"\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations","kind":"article","role":"collectionGroup"},"doc://Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"url":"\/documentation\/parsing\/parser\/stringliteraltype","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","abstract":[],"kind":"symbol","title":"Parser.StringLiteralType"},"doc://Parsing/documentation/Parsing":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","type":"topic","kind":"symbol","role":"collection","abstract":[]}}}