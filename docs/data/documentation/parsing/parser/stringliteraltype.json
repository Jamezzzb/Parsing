{"abstract":[{"type":"text","text":"Inherited from "},{"code":"ExpressibleByStringLiteral.StringLiteralType","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringLiteralType","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]}]}],"sections":[],"metadata":{"roleHeading":"Type Alias","role":"symbol","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"externalID":"s:7Parsing6ParserVAAytRszlE17StringLiteralTypea","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","symbolKind":"typealias","title":"Parser.StringLiteralType","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/stringliteraltype"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Parsing/documentation/Parsing":{"type":"topic","abstract":[],"role":"collection","title":"Parsing","identifier":"doc:\/\/Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing"},"doc://Parsing/documentation/Parsing/Parser":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"A generic type for building parsers of (","type":"text"},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}]},"role":"symbol","title":"Parser.StringLiteralType","abstract":[],"url":"\/documentation\/parsing\/parser\/stringliteraltype","kind":"symbol","type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByStringLiteral-Implementations":{"kind":"article","title":"ExpressibleByStringLiteral Implementations","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","url":"\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations","abstract":[],"type":"topic","role":"collectionGroup"}}}