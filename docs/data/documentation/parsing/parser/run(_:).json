{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser"]]},"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Attempts to parse ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from provided input string.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/parser\/run(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","externalID":"s:7Parsing6ParserV3runyxSg5match_Ss4resttSSnF","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"title":"run(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"run"},{"text":"(","kind":"text"},{"text":"consuming","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> (match","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, rest"},{"text":": ","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":")","kind":"text"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"str"},{"text":": ","kind":"text"},{"text":"consuming","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> (match"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, rest","kind":"text"},{"text":": ","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the string to parse."}]}],"name":"str"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"a tuple of match and remainder of the string.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Will consume the matching portion of the input or return a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" match."},{"text":" ","type":"text"},{"type":"codeVoice","code":"rest"},{"type":"text","text":" is the portion of the input not matched."}]}]}],"sections":[],"references":{"doc://Parsing/documentation/Parsing/Parser/run(_:)":{"abstract":[{"text":"Attempts to parse ","type":"text"},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from provided input string."}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"consuming"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> (match","kind":"text"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, rest","kind":"text"},{"kind":"text","text":": "},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/parser\/run(_:)","title":"run(_:)"},"doc://Parsing/documentation/Parsing/Parser":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"A generic type for building parsers of (","type":"text"},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://Parsing/documentation/Parsing":{"type":"topic","abstract":[],"role":"collection","title":"Parsing","identifier":"doc:\/\/Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing"}}}