{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnicodeScalarLiteralType","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"StringLiteralType","kind":"typeIdentifier","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","preciseIdentifier":"s:7Parsing6ParserVAAytRszlE17StringLiteralTypea"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:7Parsing6ParserVAAytRszlE24UnicodeScalarLiteralTypea","symbolKind":"typealias","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarLiteralType"}],"title":"Parser.UnicodeScalarLiteralType","roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnicodeScalarLiteralType","kind":"identifier"}],"role":"symbol","modules":[{"name":"Parsing"}],"extendedModule":"Parsing"},"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByUnicodeScalarLiteral.UnicodeScalarLiteralType"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/parsing\/parser\/unicodescalarliteraltype"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/UnicodeScalarLiteralType":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarLiteralType"}],"title":"Parser.UnicodeScalarLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"UnicodeScalarLiteralType","kind":"identifier"}],"url":"\/documentation\/parsing\/parser\/unicodescalarliteraltype","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType","role":"symbol","type":"topic"},"doc://Parsing/documentation/Parsing":{"kind":"symbol","abstract":[],"url":"\/documentation\/parsing","title":"Parsing","type":"topic","role":"collection","identifier":"doc:\/\/Parsing\/documentation\/Parsing"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByUnicodeScalarLiteral-Implementations":{"type":"topic","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","role":"collectionGroup","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations","url":"\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations","abstract":[]},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"role":"symbol","abstract":[],"url":"\/documentation\/parsing\/parser\/stringliteraltype","title":"Parser.StringLiteralType","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringLiteralType"}],"kind":"symbol","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}