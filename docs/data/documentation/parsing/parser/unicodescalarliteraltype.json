{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ExpressibleByUnicodeScalarLiteral.UnicodeScalarLiteralType"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/parser\/unicodescalarliteraltype"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Type Alias","externalID":"s:7Parsing6ParserVAAytRszlE24UnicodeScalarLiteralTypea","symbolKind":"typealias","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarLiteralType"}],"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","title":"Parser.UnicodeScalarLiteralType","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UnicodeScalarLiteralType","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnicodeScalarLiteralType","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserVAAytRszlE17StringLiteralTypea","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","kind":"typeIdentifier","text":"StringLiteralType"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing","doc:\/\/Parsing\/documentation\/Parsing\/Parser","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"]]},"sections":[],"references":{"doc://Parsing/documentation/Parsing":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","type":"topic","kind":"symbol","role":"collection","abstract":[]},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","kind":"article","url":"\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"},"doc://Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/StringLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StringLiteralType","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","navigatorTitle":[{"text":"StringLiteralType","kind":"identifier"}],"url":"\/documentation\/parsing\/parser\/stringliteraltype","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/StringLiteralType","abstract":[],"kind":"symbol","title":"Parser.StringLiteralType"},"doc://Parsing/documentation/Parsing/Parser/UnicodeScalarLiteralType":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UnicodeScalarLiteralType","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarLiteralType"}],"type":"topic","title":"Parser.UnicodeScalarLiteralType","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/UnicodeScalarLiteralType","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/parser\/unicodescalarliteraltype","kind":"symbol"}}}