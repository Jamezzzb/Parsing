{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)"],"title":"Instance Methods"},{"title":"Type Properties","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces"]},{"title":"Type Methods","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing"]]},"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"code":"String","type":"codeVoice"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Parsing\/s26ExpressibleByStringLiteralP","doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","title":"Parser","externalID":"s:7Parsing6ParserV"},"variants":[{"paths":["\/documentation\/parsing\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"code":"String","type":"codeVoice"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","kind":"symbol","type":"topic"},"doc://Parsing/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByUnicodeScalarLiteral","identifier":"doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP"},"doc://Parsing/documentation/Parsing/Parser/prefix(_:)":{"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","abstract":[{"type":"text","text":"parses literal off beginning of string"}],"role":"symbol","title":"prefix(_:)","url":"\/documentation\/parsing\/parser\/prefix(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/flatMap(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","abstract":[],"role":"symbol","title":"flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"B","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"B"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/init(run:)":{"title":"init(run:)","url":"\/documentation\/parsing\/parser\/init(run:)","abstract":[{"type":"text","text":"Initializes a "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" with a mutating function on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"run"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic"},"doc://Parsing/documentation/Parsing/Parser/char":{"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Character","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","abstract":[],"role":"symbol","title":"char","url":"\/documentation\/parsing\/parser\/char","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"char"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"text":"<","kind":"text"},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","type":"topic","kind":"symbol","role":"collection","abstract":[]},"doc://Parsing/documentation/Parsing/Parser/always(_:)":{"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","url":"\/documentation\/parsing\/parser\/always(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"always"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"text":">(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that always "},{"type":"codeVoice","code":"succeeds"},{"text":", useful when combined with ","type":"text"},{"type":"codeVoice","code":"flatMap(_:)"},{"text":".","type":"text"}],"kind":"symbol","title":"always(_:)"},"doc://Parsing/documentation/Parsing/Parser/zeroOrMore(separatedBy:)":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/parser\/zeroormore(separatedby:)","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"zeroOrMore","kind":"identifier"},{"kind":"text","text":"("},{"text":"separatedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"title":"zeroOrMore(separatedBy:)"},"doc://Parsing/documentation/Parsing/Parser/run":{"abstract":[{"text":"Called inside of ","type":"text"},{"type":"codeVoice","code":"run(_:)"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/parser\/run","title":"run","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run","type":"topic","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/oneOf(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","abstract":[{"text":"returns the first parser that succeeds","type":"text"}],"role":"symbol","title":"oneOf(_:)","url":"\/documentation\/parsing\/parser\/oneof(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"oneOf"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":">...) -> "},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:SJ","kind":"typeIdentifier","text":"Character"},{"text":">) -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes while encountered characters not contained in given set."}],"url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","title":"matchingAllCharacters(notIn:)","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","url":"\/documentation\/parsing\/parser\/expressiblebyextendedgraphemeclusterliteral-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","type":"topic","kind":"article"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByStringLiteral-Implementations":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","abstract":[],"title":"ExpressibleByStringLiteral Implementations","type":"topic","url":"\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations","kind":"article","role":"collectionGroup"},"doc://Parsing/documentation/Parsing/Parser/prefix(while:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Parser"},{"text":" that prefixes until predicate fails.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SJ","kind":"typeIdentifier","text":"Character"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"title":"prefix(while:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)","url":"\/documentation\/parsing\/parser\/prefix(while:)"},"doc://Parsing/documentation/Parsing/Parser/zeroOrMoreSpaces":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"zeroOrMoreSpaces"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<()>","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}]},"type":"topic","abstract":[],"url":"\/documentation\/parsing\/parser\/zeroormorespaces","title":"zeroOrMoreSpaces","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/oneOrMoreSpaces":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"oneOrMoreSpaces","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<()>","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","abstract":[],"url":"\/documentation\/parsing\/parser\/oneormorespaces","title":"oneOrMoreSpaces","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/run(_:)":{"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","abstract":[{"type":"text","text":"Attempts to parse "},{"code":"Output","type":"codeVoice"},{"text":" from provided input string.","type":"text"}],"url":"\/documentation\/parsing\/parser\/run(_:)","kind":"symbol","role":"symbol","title":"run(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"text":"consuming","kind":"keyword"},{"kind":"text","text":" "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> (match","kind":"text"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":"?, rest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":")"}]},"doc://Parsing/documentation/Parsing/Parser/map(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parser\/map(_:)","title":"map(_:)","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/never":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"never"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that always fails, useful when combined with "},{"type":"codeVoice","code":"flatMap(_:)"},{"text":".","type":"text"}],"url":"\/documentation\/parsing\/parser\/never","title":"never","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","kind":"article","url":"\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"},"doc://Parsing/documentation/Parsing/Parser/char(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"char"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","url":"\/documentation\/parsing\/parser\/char(_:)","type":"topic","role":"symbol","title":"char(_:)"},"doc://Parsing/s26ExpressibleByStringLiteralP":{"title":"Swift.ExpressibleByStringLiteral","type":"unresolvable","identifier":"doc:\/\/Parsing\/s26ExpressibleByStringLiteralP"},"doc://Parsing/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","type":"unresolvable","identifier":"doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP"}}}