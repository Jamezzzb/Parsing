{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)"],"title":"Instance Methods"},{"title":"Type Properties","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser"]}],"identifier":{"url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"type":"text","text":") -> "},{"code":"Output","type":"codeVoice"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Parsing\/s26ExpressibleByStringLiteralP","doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"metadata":{"symbolKind":"struct","modules":[{"name":"Parsing"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"role":"symbol","title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"externalID":"s:7Parsing6ParserV"},"references":{"doc://Parsing/documentation/Parsing/Parser/run(_:)":{"role":"symbol","url":"\/documentation\/parsing\/parser\/run(_:)","abstract":[{"text":"Attempts to parse ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from provided input string.","type":"text"}],"kind":"symbol","title":"run(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"consuming"},{"text":" ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> (match","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, rest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)"},"doc://Parsing/s26ExpressibleByStringLiteralP":{"type":"unresolvable","identifier":"doc:\/\/Parsing\/s26ExpressibleByStringLiteralP","title":"Swift.ExpressibleByStringLiteral"},"doc://Parsing/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","identifier":"doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral"},"doc://Parsing/documentation/Parsing/Parser/zeroOrMoreSpaces":{"role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces","abstract":[],"title":"zeroOrMoreSpaces","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zeroOrMoreSpaces"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<()>","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/parser\/zeroormorespaces","type":"topic"},"doc://Parsing/documentation/Parsing/Parser/oneOrMoreSpaces":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"oneOrMoreSpaces","kind":"symbol","url":"\/documentation\/parsing\/parser\/oneormorespaces","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"oneOrMoreSpaces","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"kind":"text","text":"<()>"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","abstract":[]},"doc://Parsing/documentation/Parsing":{"role":"collection","title":"Parsing","url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/Parsing\/documentation\/Parsing","type":"topic","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/map(_:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"text":"B","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B"},{"text":">","kind":"text"}],"title":"map(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/map(_:)","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/zeroOrMore(separatedBy:)":{"abstract":[],"type":"topic","kind":"symbol","title":"zeroOrMore(separatedBy:)","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"zeroOrMore","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separatedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"]>"}],"url":"\/documentation\/parsing\/parser\/zeroormore(separatedby:)","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"kind":"article","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","type":"topic","url":"\/documentation\/parsing\/parser\/expressiblebyextendedgraphemeclusterliteral-implementations","abstract":[],"role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations"},"doc://Parsing/documentation/Parsing/Parser/flatMap(_:)":{"abstract":[],"title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"B"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/never":{"type":"topic","kind":"symbol","title":"never","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"never"},{"text":": ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/never","abstract":[{"type":"text","text":"A parser that always fails, useful when combined with "},{"type":"codeVoice","code":"flatMap(_:)"},{"text":".","type":"text"}]},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByStringLiteral-Implementations":{"url":"\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations","abstract":[],"kind":"article","title":"ExpressibleByStringLiteral Implementations","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","role":"collectionGroup","type":"topic"},"doc://Parsing/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"identifier":"doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP","type":"unresolvable","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral"},"doc://Parsing/documentation/Parsing/Parser/prefix(while:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"prefix(while:)","kind":"symbol","url":"\/documentation\/parsing\/parser\/prefix(while:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Character","preciseIdentifier":"s:SJ","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)","abstract":[{"text":"A ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes until predicate fails."}]},"doc://Parsing/documentation/Parsing/Parser/always(_:)":{"url":"\/documentation\/parsing\/parser\/always(_:)","role":"symbol","type":"topic","title":"always(_:)","kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","abstract":[{"type":"text","text":"A parser that always "},{"code":"succeeds","type":"codeVoice"},{"text":", useful when combined with ","type":"text"},{"code":"flatMap(_:)","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"always","kind":"identifier"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/char":{"abstract":[],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Character","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","title":"char","role":"symbol","url":"\/documentation\/parsing\/parser\/char","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"char","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"text":">","kind":"text"}]},"doc://Parsing/documentation/Parsing/Parser/char(_:)":{"abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","title":"char(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/char(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"char","kind":"identifier"},{"kind":"text","text":"("},{"text":"Character","preciseIdentifier":"s:SJ","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://Parsing/documentation/Parsing/Parser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"code":"String","type":"codeVoice"},{"text":") -> ","type":"text"},{"code":"Output","type":"codeVoice"}]},"doc://Parsing/documentation/Parsing/Parser/prefix(_:)":{"abstract":[{"text":"parses literal off beginning of string","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","title":"prefix(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/prefix(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations","abstract":[],"kind":"article","type":"topic","title":"ExpressibleByUnicodeScalarLiteral Implementations","url":"\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations"},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Parser"},{"text":" that prefixes while encountered characters not contained in given set.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","title":"matchingAllCharacters(notIn:)","role":"symbol","url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Parsing/documentation/Parsing/Parser/init(run:)":{"abstract":[{"text":"Initializes a ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" with a mutating function on ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)","title":"init(run:)","role":"symbol","url":"\/documentation\/parsing\/parser\/init(run:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"run","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?)"}]},"doc://Parsing/documentation/Parsing/Parser/oneOf(_:)":{"title":"oneOf(_:)","url":"\/documentation\/parsing\/parser\/oneof(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"oneOf"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":">...) -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"text":"A","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","abstract":[{"type":"text","text":"returns the first parser that succeeds"}],"role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/run":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Called inside of "},{"type":"codeVoice","code":"run(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run","url":"\/documentation\/parsing\/parser\/run","title":"run","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}}}