{"metadata":{"roleHeading":"Structure","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6ParserV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"title":"Parser","role":"symbol","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/Parsing\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"code":"String","type":"codeVoice"},{"type":"text","text":") -> "},{"type":"codeVoice","code":"Output"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Output"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)"]},{"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces"],"title":"Type Properties"},{"title":"Type Methods","identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)"]},{"generated":true,"identifiers":["doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations","doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations"],"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Parsing\/documentation\/Parsing\/Parser"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Parsing\/s26ExpressibleByStringLiteralP","doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP"]}],"variants":[{"paths":["\/documentation\/parsing\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Parsing/documentation/Parsing/Parser/zeroOrMore(separatedBy:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMore(separatedBy:)","role":"symbol","url":"\/documentation\/parsing\/parser\/zeroormore(separatedby:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"zeroOrMore","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separatedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV","text":"Parser"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"]>"}],"type":"topic","abstract":[],"kind":"symbol","title":"zeroOrMore(separatedBy:)"},"doc://Parsing/documentation/Parsing/Parser/char(_:)":{"title":"char(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"char","kind":"identifier"},{"kind":"text","text":"("},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char(_:)","kind":"symbol","url":"\/documentation\/parsing\/parser\/char(_:)","role":"symbol","abstract":[]},"doc://Parsing/documentation/Parsing/Parser/oneOrMoreSpaces":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOrMoreSpaces","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"oneOrMoreSpaces"},{"text":": ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<()>"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"text":".","type":"text"}]},"abstract":[],"url":"\/documentation\/parsing\/parser\/oneormorespaces","kind":"symbol","title":"oneOrMoreSpaces","role":"symbol","type":"topic"},"doc://Parsing/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"type":"unresolvable","identifier":"doc:\/\/Parsing\/s43ExpressibleByExtendedGraphemeClusterLiteralP","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral"},"doc://Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"A generic type for building parsers of ("},{"type":"codeVoice","code":"String"},{"text":") -> ","type":"text"},{"type":"codeVoice","code":"Output"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parser"}],"kind":"symbol","title":"Parser","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/char":{"role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/char","title":"char","abstract":[],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"char"},{"text":": ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ","text":"Character"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/parsing\/parser\/char"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"url":"\/documentation\/parsing\/parser\/expressiblebyextendedgraphemeclusterliteral-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","role":"collectionGroup","kind":"article"},"doc://Parsing/documentation/Parsing/Parser/zeroOrMoreSpaces":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"zeroOrMoreSpaces"},{"kind":"text","text":": "},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<()>","kind":"text"}],"abstract":[],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/zeroOrMoreSpaces","url":"\/documentation\/parsing\/parser\/zeroormorespaces","title":"zeroOrMoreSpaces","role":"symbol"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByStringLiteral-Implementations":{"kind":"article","role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","url":"\/documentation\/parsing\/parser\/expressiblebystringliteral-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByStringLiteral-Implementations"},"doc://Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","kind":"symbol","abstract":[],"title":"Parsing"},"doc://Parsing/documentation/Parsing/Parser/oneOf(_:)":{"abstract":[{"text":"returns the first parser that succeeds","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parser\/oneof(_:)","title":"oneOf(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"oneOf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/oneOf(_:)","type":"topic"},"doc://Parsing/documentation/Parsing/Parser/prefix(while:)":{"url":"\/documentation\/parsing\/parser\/prefix(while:)","abstract":[{"type":"text","text":"A "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes until predicate fails."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(while:)","title":"prefix(while:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":"<"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/matchingAllCharacters(notIn:)":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/matchingallcharacters(notin:)","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"A ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" that prefixes while encountered characters not contained in given set."}],"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/matchingAllCharacters(notIn:)","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchingAllCharacters"},{"text":"(","kind":"text"},{"text":"notIn","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","kind":"typeIdentifier","text":"Parser"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"matchingAllCharacters(notIn:)"},"doc://Parsing/documentation/Parsing/Parser/prefix(_:)":{"title":"prefix(_:)","url":"\/documentation\/parsing\/parser\/prefix(_:)","abstract":[{"type":"text","text":"parses literal off beginning of string"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/prefix(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic"},"doc://Parsing/documentation/Parsing/Parser/never":{"abstract":[{"type":"text","text":"A parser that always fails, useful when combined with "},{"type":"codeVoice","code":"flatMap(_:)"},{"type":"text","text":"."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"never"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"title":"never","type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/never","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parser\/never"},"doc://Parsing/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","identifier":"doc:\/\/Parsing\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral"},"doc://Parsing/documentation/Parsing/Parser/run(_:)":{"url":"\/documentation\/parsing\/parser\/run(_:)","abstract":[{"type":"text","text":"Attempts to parse "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from provided input string."}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run(_:)","title":"run(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"text":"(","kind":"text"},{"text":"consuming","kind":"keyword"},{"kind":"text","text":" "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> (match"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, rest"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/always(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"A parser that always "},{"code":"succeeds","type":"codeVoice"},{"type":"text","text":", useful when combined with "},{"type":"codeVoice","code":"flatMap(_:)"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/always(_:)","title":"always(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/always(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"always","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"text":">(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":">"}]},"doc://Parsing/documentation/Parsing/Parser/map(_:)":{"url":"\/documentation\/parsing\/parser\/map(_:)","abstract":[],"type":"topic","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/map(_:)","title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"B"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol"},"doc://Parsing/documentation/Parsing/Parser/flatMap(_:)":{"identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing6ParserV","text":"Parser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[],"type":"topic","title":"flatMap(_:)"},"doc://Parsing/documentation/Parsing/Parser/run":{"kind":"symbol","title":"run","type":"topic","abstract":[{"text":"Called inside of ","type":"text"},{"type":"codeVoice","code":"run(_:)"},{"text":".","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/run","url":"\/documentation\/parsing\/parser\/run"},"doc://Parsing/documentation/Parsing/Parser/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/ExpressibleByUnicodeScalarLiteral-Implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","url":"\/documentation\/parsing\/parser\/expressiblebyunicodescalarliteral-implementations","type":"topic","abstract":[],"kind":"article"},"doc://Parsing/s26ExpressibleByStringLiteralP":{"title":"Swift.ExpressibleByStringLiteral","type":"unresolvable","identifier":"doc:\/\/Parsing\/s26ExpressibleByStringLiteralP"},"doc://Parsing/documentation/Parsing/Parser/init(run:)":{"title":"init(run:)","role":"symbol","identifier":"doc:\/\/Parsing\/documentation\/Parsing\/Parser\/init(run:)","abstract":[{"text":"Initializes a ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" with a mutating function on "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"run"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":"?)","kind":"text"}],"url":"\/documentation\/parsing\/parser\/init(run:)","type":"topic"}}}